DataStage has been tested to work with the Ubuntu Linux **11.10 "Oneiric Ocelot":http://ubuntuguide.org/wiki/Ubuntu_Oneiric** and **12.04 "Precise Pangolin":http://releases.ubuntu.com/precise** operating systems, and the Virtual Machines work with **"VMWare Fusion 4.x":http://www.vmware.com/support/fusion4/doc/releasenotes_fusion_401.html**  and **"VMware Player":https://my.vmware.com/web/vmware/free**
_note: Ubuntu 12.10 is missing key modules required by DataStage.  It may be possible to get it to work, but it's a huge hassle to track down all the missing pieces._

DataStage is designed to be installed at the command line, but don't let this put you off!  These step-by-step instructions should be sufficient even if you have no Linux or command-line experience.

You can run DataStage as a virtual machine (i.e. a mini-Linux system, sitting inside another computer which could be running any operating system), or on a specially dedicated Linux server.  We recommend setting up a dedicated server for continued use, but a VM is a good way to quickly test-drive the system.  Your IT department should be able to help you if you get stuck, but if you install VMware Fusion or VMware Player, you can probably follow the instructions by yourself to get it running.


*Useful installation info* (note this information as you go along, for easy reference)
* IP address
* "Root" (super-administrator) username and password
* System username and password (if different -- by default the username and password are the same as root)
* DNS entry (web address) you wish to link to DataStage -- you will need to register a domain to do this.  Talk to your University IT support, or use a commercial web hosting company (Google will give you loads of options).
* Usernames and passwords (note: users can change their passwords later, but the administrator setting things up for the first time will need to know the initial configuration)


*Debian installation of DataStage (at the command line)*

*Step one: install Linux Ubuntu*

Set up your host system (VM or ordinary Linux installation) to run **"Ubuntu 11.10":http://ubuntuguide.org/wiki/Ubuntu_Oneiric** or **"Ubuntu 12.04":http://releases.ubuntu.com/precise**.  We strongly recommend using the "server" edition, because it is quicker to install, and has fewer extra components (meaning fewer security vulnerabilities).  You can use a desktop (GUI) installation though.  You will have to install DataStage via the "terminal" interface.  

If you are creating a VM inside another system, set aside as much memory as you think you will need to store your files (we suggest minimum 3GB – Ubuntu installation in VMware Player doesn’t work with less than 2GB).  Store the virtual disk as a single file.  If given the choice, do download and install Linux tools as part of installation process.

If you use OSX Lion and Virtual Box, we have some additional information on the issue tracker, **"here":http://dataflow-jira.bodleian.ox.ac.uk/jira/browse/DATAFLOW-268](http://dataflow-jira.bodleian.ox.ac.uk/jira/browse/DATAFLOW-2688**.


*Step two: prepare to install DataStage*

When installing your operating system, if you choose the default installation settings, you can proceed as below.  Expert users can customise their installation (you will need aptitude, chkconfig, apache, pwgen, samba, python-pylibacl at minimum).

If you have never worked at the command line before, here's how to read these instructions:
Any line beginning with a dollar sign ("$ ") is a command.  Just type that text, verbatim, in the bottom line of whatever is visible on your screen, and press "ENTER".  Most of the time, the prompt you see on your screen will be "$ " or "# ".  Information in curly brackets {} is instructions or commentary -- do not enter this on your screen.


Log in, using your system credentials (see above).
$ sudo su {telling the system you want to be a "super user" and you don't want it to prompt you for your password again}
$ ifconfig {to get your **"IP address":http://en.wikipedia.org/wiki/IP_address**.  Look for "inet addr" for the ethernet port.  It will be a string of numbers in a format like "162.65.3.12".   Note this address.}
$ apt-get install ssh {to allow your computer to communicate with other computers via **"SSH":http://en.wikipedia.org/wiki/Secure_Shell** protocol}
$ Y {continue}

Once your system is up,and IP address recorded, you can use a tool like **"PuTTY":http://www.chiark.greenend.org.uk/~sgtatham/putty/** to administer your server from another computer.  E.g. you could start your server at work, and finish installing the software from home.  To do this, you should connect to your server via SSH, through port 22.  Or just carry on with these instructions, directly at the command line of your server.  Note: if you do suspend or turn off your server partway through the installation process, SSH may stop working.  to fix this:

$ start ssh

And check the firewall isn't blocking port 22:

$ iptables --list {look at the line with “Chain ufw-user-limit-accept…ACCEPT …” (and it will tell you if anything is blocked.}  

To fix this:

$ ufw enable {to turn on the uncomplicated firewall interface}
$ allow 22 {to enable port 22 -- you can use this command with different numbers, to turn on whichever ports you require}
$ service iptables start {to start up your firewall with the new settings}


*Step three: install DataStage*

$ sudo su {if you're not already in super-user mode}
$ nano /etc/apt/sources.list {You are now editing the apt repository to include the DataStage download.  Scroll to the bottom, then get software from our repository: **http://apt-repo.bodleian.ox.ac.uk/datastage/**.  At the very bottom of the screen, type the following, paying attention to include the spaces:

    deb http://apt-repo.bodleian.ox.ac.uk/datastage/ stable main

You could choose to edit "stable" to "unstable", i.e. deb http://apt-repo.bodleian.ox.ac.uk/datastage/ unstable main.

Now press ctrl + x}

$ Y {yes, do it}
$ "Enter" {accept default filename}

 > wget http://apt-repo.bodleian.ox.ac.uk/datastage/dataflow.gpg
 > apt-key add dataflow.gpg
 > aptitude update {this might take awhile – there is a lot to update}
 > aptitude install dataflow-datastage
 > Y {continue}

This will take some time: a lot of stuff will scroll by. Eventually, you will see your command prompt (probably something like: “root@ubuntu:~#“) again.  Now it's installed - DataStage is now a command available from anywhere in the system.


*Step four: start DataStage*

$ datastage-config {to get to the configuration menu}
$ c {to get into the configuration submenu}	
$ a {to start apache2… now read the readout that the system gives you – see if you can follow the instructions in purple text. For example:}
$ da {to start datastage}
$ d {defaultsite: restarts apache and removes pre-existing configurations}
$ c {confsamba: if you want make any changes to the samba configuration base file, you need to restart samba. We'll skip this for now}
$ fs {to configure the file system.  You can skip this.}
$ q {to get out of apache submenu}
$ q {to get out of config submenu}

Your DataStage website should be live!  Go check it.  Either enter the web address that you already registered, or enter the IP address directly into your web browser (e.g. http://192.35.41.12).  You can't do much with your web interface yet -- but if you can't see it at all, something has gone wrong.  You can try to trouble-shoot.

Check that ports 22 and 80 are open:
$ ufw allow ssh {this unblocks ssh through the firewall in the server - port 22}
$ ufw allow http {this unblocks http through the firewall in the server - port 80}
$ ufw allow samba {this unblocks samba through the firewall in the serer - ports 137, 138, 139 and I think a couple of others}

Make sure you've started DataStage and apache ( $ datastag-config ).  If you still have trouble, and are running this with a VM, it's probably easiest to start again from scratch: destroy this VM and create a new one, using default Ubuntu settings.

Note:  I have found that using VPN software can sometimes (but not always…) mess up my connection to the server (even when my computer is only talking to its own virtual machine).


*Step five: adding users*

$ datastage-config {You can follow the instructions in the submenu, thus:}

$ u {users}
$ a {add user.  Let’s say the user’s name is Test Leader. Thus:}
$ testlead{“Username” = short username, initials or nickname, ordinary letters and numbers and some symbol keys allowed (ASCII), no spaces}
$ Test_Leader {“Name” = extended username, ASCII no spaces}
$ {email address so system can send error messages to user if necessary.  Note: default Ubuntu installation assumes you have a US keyboard.  If you can’t get an @ sign, try shift + 2}
$ l {they are the leader}
$ y {this is correct}

Let's add another user:

$ a {add user.  Let’s add a user called Test Member, thus:}
$ tmbr {group member username}
$ TestMember {name}
$ {email address, using shift+2 for @ symbol}
$ m {note: collaborator status give them access to "collab" areas - no personal filespace assigned, can't access "shared."  "Collab" is the read-write area of the filestore}
$ y {correct}
$ q {exit this submenu}

Notes: (1) Do not use your “root” server credentials for any of the group members (i.e. don’t have the same username/password for the group leader and the server administrator - this will keep your data and your server much safer). (2) If you make a mistake setting up a user, keep going: you can’t back out of the process of adding a user; you’ve got to get to the end.  You could choose “Quit” or “no” (no = go back and change the entry), in place of the “Yes this is correct” command at the end of the process.  Note: you cannot change a user's access permissions once you have created them.  You can only delete the account or change the password.

To delete a user, follow the instructions on the “user” interface to remove a user.  You will see that you are given the option to “purge” the user (remove the username and the associated files), or to “remove” only the username, which will keep the files but the files will be left in limbo – you will need to reassign them to somebody else.

Note: if you try to delete a user while that person is logged on via mapped drive or the web interface, it will break the web interface.  Make sure that the relevant user has genuinely logged off (using the “log off” button on the web interface) – simply closing the browser may not be enough – and they have disconnected DataStage as mapped drive. 

I have also found that if I make changes to the server, although the web interface continues to “seem” to behave normally, the changes aren’t always reflected in the web interface (e.g.  if I add a user, the new user isn’t able to log into the site).  If this happens, just close and re-open your browser and start again.

*Step six: set passwords for Samba/http access*

We also need to set passwords to allow the same users to access the server in different ways (e.g. for access via the web interface and the mapped drive).

Use $ q as needed to get back to root command prompt, probably something like "root@ubuntu:~# "


$ smbpasswd testlead {for the samba part – use their short username in place of testlead here}
$ password {your password of choice – you won’t see the characters coming up on screen}
$ password {retype}

$ passwd testlead {for the system UNIX password -- use their short username in place of testlead here}
$ password {your password of choice}
$ password {retype}

You need to repeat this process for every user, e.g. again for the "Test Member" persona:

$ smbpasswd tmbr {for the samba part}
$ password {your password of choice – you won’t see the characters coming up on screen}
$ password {retype}
$ passwd tmbr {for the system}
$ password {your password of choice}
$ password {retype}

*Step seven: setting up a filesystem*

DataStage is designed to make it easy to submit your files to a permanent archive or repository, once you are through with them.  So you must set up a default external repository for submissions, even if you do not plan to use one.

Go to your DataStage web interface (either the direct IP address of the server, or wherever you have set up your web URL).

Log in (button in top-right corner, using credentials with Group Leader privileges)

Click on “admin” in the top-left corner (only a logged-in group leader can get in.  If you are logged in as any other sort of user, you will not be allowed to log in).  If you get stuck, go back to your DataStage homepage, click the “log out” button in the top-right corner, and log back in as a group leader.


Repositories -> green plus button to add repo.

1)	Enter a repository (use dummy info if necessary). 
2)	Click “home” (tiny link at top left of screen) or just type your [DataStage web address]/admin/
3)	Use “choose default repository” to tag this repository as “default”
4)	Click save.  You will now see “default repository.”


*Step eight: using the web interface*

Navigating the interface:
We hope you can do this without instructions.  Just in case, here's how to upload files and add some metadata.

# Use the "browse data" options (inside the box on the left-hand side) to navigate to your target folder.
# Click "upload file" (at the top of the screen)
# Depending on your browser's settings, the details of this step will vary, but you will probably see a pop-up box asking you to browse for a file on your local computer, which you wish to upload to the website.  Select the file and click "upload."
   * Uploading a single file is straightforward: the file will appear on the screen you are currently viewing in your web interface.  You can now edit the "title" and "description" metadata options to add more information if you like. (note: only the "owner" of a file -- which is the person who originally uploaded -- can edit these fields.  Even in the "Collab" directory, and even if you are the Group Leader, you can't edit somebody else's title and description ("metadata")).
   * You can upload whole directories ("folders").  You must first turn the target directory into a .zip file on your local computer.  When you upload a zipped directory, DataStage will automatically unzip it, and unpack the contents -- if you zipped a series of nested folders into one .zip file, DataStage will create that same filetree.  Note: If your zipped folder contains only folders (with whatever content within), no problem.  If it contains only standalone files (of any type), no problem.  However, if there is a mixture of both directories and standalone files, it won't work.  sorry.).
   * Note: If you use subdirectories (e.g. in the "Collab" area), only the owner of the top-most directory can use the web interface to upload further files within that branch of the file structure.  However, other users can upload sub-files or sub-directories via the mapped drive interface (see below) -- and they ill "own" those sub-files, so can edit their own metadata.
# The “Permissions” file reminds you which permissions go with that particular user and folder.  We recommend you not delete this – it might be a useful reference for you (or other users) in future.  Deleting the file won't harm anything though.
# To delete a file, press "delete" (only the owner of a file may delete it via the web interface -- although if the file is in the "collab" area, other users may delete it using the mapped drive interface). Deleting a file via the web interface seems to have a bug -- file names remain in the list on the web interface, even though they are no longer accessible.  Deleting files via the mapped drive interface does not suffer from this problem -- everything functions as you would expect it should.

Notes:

When editing the file's metadata (title and description fields): depending on your browser configuration, you may see a button saying "update metadata." If so, you must click this in order for your changes to be kept.  If you do not see this button, then simply clicking your mouse somewhere outside the text box (or pressing the "tab" key) should save your changes.  There is currently a bug related to JavaScript, which can cause the web interface to act strangely.  If you notice that the "title" and "description" fields are not editable, or the changes you make do not seem to stick, this is a JavaScript issue.  Some browsers (especially Internet Explorer) have trouble, while others (Firefox, Chrome) usually work fine.  You can still edit these fields if you turn off JavaScript in your browser, but this may have knock-on consequences for other websites which require JavaScript to be turned on.

*Step nine: connect to a repository, to enable submissions*
You can connect to your own instance of DataBank, or to other SWORD-compliant repositories.  Here is how to set it up to connect your DataStage to the “demo” instance of DataBank, running on a VM in the Oxford e-Research Centre.
{note: this can be browsed by the general public, and we routinely delete files to make space.  Don’t put anything important here!}

Name: DataBank {call it what you like}
Type: DataBank {user choice, but easiest to call it DataBank for clarity}
Homepage: http://databank-vm1.oerc.ox.ac.uk/sandbox/ {with the final slash}
Authentication: Basic Authentication
{leave the rest blank}
{save}

*Step ten: submit some data to the repository*

In your browser bar, go back to your home DataStage page.
For submission:

Navigate into your target folder/subfile
Click "submit"
Repository: DataBank {or whatever you've set up}
Identifier: {the name that DataStage and DataBank will internally use to talk about this datapackage. keep it compact.}
Title: {title visible to people browsing in DataBank.  Make it human-readable}

DataBank demo system credentials:
Username: admin
Password: test


*Other information*

To turn off /restart your server:
$ sudo halt {if you’re using a virtual machine, power off the VM after the halt is complete}
 - or -
$ sudo reboot {to restart your server - use this if you're administering your server remotely -- if you just turn it off, you can't use your remote computer to turn it back on again!}

You will need to re-start DataStage once your machine has restarted:
$ {log in using your admin credentials}
$ sudo datastage-config
$ d {to start DataStage}

Go to your web interface to check it has worked -- the DataStage homepage should appear pretty much instantly if everything has worked correctly.

To delete and remove DataStage installation (e.g. to reinstall it from scratch)
_note: I'm not sure this is removing everything... but it seems to work OK_

$ sudo apt-get --purge remove dataflow-datastage {to remove the main installation}
$ rm *.gpg* {to remove the underlying .gpg installation file stored in your system, so when you try to install the new version, you pull the latest version from the repository}

This should leave your (samba and UNIX) usernames and passwords from the last time around, and I'm pretty sure it leaves the filetree intact -- but I haven't thoroughly tested this.  Let me know how you get on! katherine.fletcher@cs.ox.ac.uk

To change the look of your website
_This is mostly for experts -- but a novice user can easily change the "DataStage" label on the front page, e.g. to have it read the name of your research group instead._

A quick-and-dirty method to re-name your front page:
$ nano /usr/share/pyshared/datastage/web/core/templates/base.html 

Look for a line like this (note: I've added extra spaces because otherwise the lines below mixed up the editor system for this wiki.  Just keep whatever formatting you see on your server interface):

< title>{% block title %}{% endblock %} | {{ settings.SITE_NAME }}< /title>
just delete/overtype this, so it reads < title>*YourWebsiteNameNoSpaces*< /title> 

Look lower, for the line:
< a href=”{% url core:index %>{{ settings.SITE_NAME }}< /a> 

And replace it with < a href=”{% url core:index %>*YourWebsiteNameNoSpaces*< /a >  and it worked!)

For pros:
The web interface has been written in a "Django":https://www.djangoproject.com/ framework.

To change the webpage display, the filepath is: /usr/share/pyshared/datastage/web/
File: /usr/share/pyshared/datastage/web/core/templates/base.html

The name in the website header (currently set to “DATASTAGE”) isn’t hardcoded, it’s picked up from python.  To change any of these settings, the developers say to adjust this file, but I (a non-developer) can't figure out what to do: 
nano /usr/share/pyshared/datastage/web/settings.py

Configuration file
/usr/share/dataflow-datastage/conf/datastage.conf – configuration file with key value pairs, picked up by website templates (when Python needs access)

/etc/apache2/sites-available/datastage.conf
/etc/apache2/sites-enabled/datastage.conf – any changes must be reflected here (when Apache needs access)



*Good luck!*
Updates and changes to this wiki are welcome.  katherine.fletcher@cs.ox.ac.uk




